version: '2'

services:
  web:
    build: .
    image: webapp:latest
    command: ["/code/docker/wait_for_db.sh", "db", "--", "/code/docker/docker-entrypoint.sh", "--", "/code/docker/run_web.sh"]
    ports:
      - "8000:8000"
    volumes:
      - static:/code/src/common/static
      - media:/code/src/common/media
    depends_on:
      - db
      - redis
    environment:
      - VIRTUAL_HOST=example.com
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=example.com,www.example.com
      - LETSENCRYPT_EMAIL=issuemaster@example.com

  celery_worker:
    build: .
    image: webapp:latest
    command: ["/code/docker/wait_for_db.sh", "db", "--", "/code/docker/run_celery_worker.sh"]
    volumes_from:
      - web:rw
    depends_on:
      - web
      - redis

  celery_beat:
    build: .
    image: webapp:latest
    command: ["/code/docker/wait_for_db.sh", "db", "--", "/code/docker/run_celery_beat.sh"]
    volumes_from:
      - web:rw
    depends_on:
      - web
      - redis

  nginx:
    restart: always
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./docker/certs:/etc/nginx/certs:ro"
    volumes_from:
      - web:ro

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./docker/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /bin/sh -c
    command: ["/usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 1s:60s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"]

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./docker/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  redis:
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data

  db:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
        POSTGRES_PASSWORD: test

volumes:
  pgdata:
  redisdata:
  static:
  media:
